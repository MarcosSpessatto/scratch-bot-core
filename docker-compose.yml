version: '2'

services:
  rocketchat:
    container_name: rocketchat
    image: defendi/rocketchat
    restart: unless-stopped
    env_file:
      - docker/rocketchat.env
    ports:
      - 3000:3000
    depends_on:
      - mongo

  mongo:
    image: mongo:4.0
    restart: unless-stopped
    volumes:
      - ./data/db:/data/db
    ports:
      - 27017:27017
    command: mongod --smallfiles --oplogSize 128 --replSet rs0 --storageEngine=mmapv1

  mongo-init-replica:
    image: mongo:4.0
    command: >
      bash -c
        "for i in `seq 1 30`; do
          mongo mongo/rocketchat --eval \"
            rs.initiate({
              _id: 'rs0',
              members: [ { _id: 0, host: 'localhost:27017' } ]})\" &&
          s=$$? && break || s=$$?;
          echo \"Tried $$i times. Waiting 5 secs...\";
          sleep 5;
        done; (exit $$s)"
    depends_on:
      - mongo

  coach:
    container_name: coach
    image: scratchbotcore/coach:boilerplate
    build:
      context: .
      dockerfile: ./docker/coach.Dockerfile
    volumes:
      - ./data/notebook_models:/notebook_models
    command: sh -c "cp -r /src_models/* /notebook_models"

  bot:
    image: scratchbotcore/bot:boilerplate
    container_name: bot
    build:
      context: .
      dockerfile: ./docker/bot.Dockerfile
    restart: unless-stopped
    env_file:
      - docker/bot-rocketchat.env
    ports:
      - 5002:5002
      - 5005:5005
    depends_on:
      - actions
    volumes:
      - ./bot:/bot
      - ./scripts:/scripts
    command: bash -c "rasa run --credentials credentials.yml -m ../models --enable-api --debug"

  actions:
    container_name: actions
    build:
      context: .
      dockerfile: ./docker/actions.Dockerfile
    ports:
      - 5055:5055
    volumes:
      - ./bot/actions:/bot/actions
      - ./bot/Makefile:/bot/Makefile
    command: bash -c "rasa run actions --actions actions"

  notebooks:
    container_name: notebooks
    build:
      context: .
      dockerfile: ./docker/notebooks.Dockerfile
    env_file:
      - docker/notebooks.env
    volumes:
      - ./coach:/work/coach
      - ./notebooks:/work/notebooks
      - ./data/notebook_models:/models:ro
    ports:
      - 8888:8888
    depends_on:
      - coach

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    volumes:
      - ./data/rabbitmq:/var/lib/rabbitmq
    ports:
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

  rabbitmq-consumer:
    build:
      context: .
      dockerfile: ./docker/rabbitmq/consumer.Dockerfile
    restart: unless-stopped
    volumes:
      - ./rabbitmq/consumer/:/opt/scripts/
    depends_on:
      - rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin

      # Analytics config
      - ELASTICSEARCH_URL=elasticsearch:9200
      - ENVIRONMENT_NAME=localhost
      - BOT_VERSION=last-bot-commit-hash
      # - ELASTICSEARCH_USER=admin
      # - ELASTICSEARCH_PASSWORD=admin
      # - ELASTICSEARCH_HTTP_SCHEME=https
      # - ELASTICSEARCH_PORT=443
    command: python3 /opt/scripts/consume_bot_messages.py

  elasticsearch:
    build:
      context: .
      dockerfile: ./docker/elasticsearch.Dockerfile
    restart: unless-stopped
    ports:
      - 9200:9200
      - 9300:9300
    environment:
      - discovery.type=single-node
    volumes:
      - ./data/esbackup:/usr/share/elasticsearch/backup
      - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./data/esdata:/usr/share/elasticsearch/data

  kibana:
    build:
      context: .
      dockerfile: ./docker/kibana.Dockerfile
    restart: unless-stopped
    ports:
      - 5601:5601
    environment:
      - SERVER_PORT=5601
      - ELASTICSEARCH_URL=http://elasticsearch:9200
      - KIBANA_URL=http://kibana:5601
    depends_on:
      - elasticsearch
